{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAgCeA,MA7Bf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACA,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOL,UAAU,gBACrBI,OAIb,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAG,KAA/C,UC4CGC,G,kNAvDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,6CALV,gBAGAJ,EAHA,EAERK,KACEA,KAAML,OAIV,EAAKM,SAAS,CAACN,SAAQD,WAAU,IAPvB,2C,kEAUVQ,KAAKN,c,+BAUE,IAAD,EACqBM,KAAKT,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OACjB,OACA,6BAASX,UAAU,aAChBU,EACD,yBAAKV,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAGA,yBAAKA,UAAU,UACb,4BACGW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,mB,GA5CZuB,IAAMC,YCDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAAkB,kBAAC,EAAD,OAGlBC,SAASC,eAAe,a","file":"static/js/main.0b9796c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return (\r\n    <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"movie_year\">{year}</h5> \r\n            <ul className=\"movie_genres\">\r\n                {genres.map((genre, index) => (\r\n                    <li key={index} className=\"genres_genre\">\r\n                        {genre}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n \r\nexport default Movie;\r\n\r\n","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n//axios == data를 fetch하는 방법\nclass App extends React.Component{\n  state = {\n    isLoading: true, // 바꿀 값 == isLoading\n    movies: []  //movies라는 값은 생성\n  };\n  getMovies = async () => { // 비동기 처리 == axios는 시간이 걸리기 때문에 비동기처리해서 기다리라고 함수에게 말해주는 것.\n    const {\n      data:{\n        data:{movies}\n      } \n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\"); // data에 data에 movies에 접근해서 정보 가져오기\n    //console.log(movies);  // console로 찍으면 data 나옴\n    this.setState({movies, isLoading:false}); // mount가 되면 isLoading은 false로 바꾸기 isLoading:false == we are ready\n  } // getMovies라는 함수 생성\n  componentDidMount(){\n    this.getMovies(); \n  } //mount가 되면 이것에 getMovies를 호출 \n\n\n  // componentDidMount에 대한 예제\n  // componentDidMount(){\n  //   setTimeout(() => {\n  //     this.setState({isLoading:false}); // setState를 써서 isLoading을 동적으로 변환. 6초 후에\n  //   }, 6000);\n  // }\n  render(){\n    const{isLoading, movies} = this.state;\n    return ( \n    <section className=\"container\">\n      {isLoading ? (\n      <div className=\"loader\">\n        <span className=\"loader_text\">Loading...</span>\n      </div>\n      ) : (\n        <div className=\"movies\">\n          <ul>\n            {movies.map(movie => (\n              <Movie \n                key={movie.id} \n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n              //json의 title은 json에서 갖고 오기\n            ))}\n          </ul>\n        </div>\n        )}\n    </section> //isLoading이 true면 앞에 꺼, false면 뒤에 꺼\n    );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode><App /></React.StrictMode>, // 여기에 component를 넣으면 에러 발생\n  // app은 유일한 react application이기 때문에 하나만 rendering 할 수 있음\n  // 따라서 app.js에 이어서 component를 구성하기\n  document.getElementById('potato') //index에 있는 id값을 갖고 오기\n);\n\n"],"sourceRoot":""}